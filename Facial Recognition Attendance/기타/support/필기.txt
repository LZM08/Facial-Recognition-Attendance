https://opencv.org/releases/
pip install opencv-python 라이브러리 다운로드
pip install opencv-contrib-python
pip install opencv-contrib-python #패키지에는 특징점 검출, 추적, 객체 인식, 구조화된 광학 흐름 등의 기능이 포함되어 있습니다. 

pip install Pillow



1
이미지 입력 image = cv.imread(imagepath) 
import cv2 as cv
img=cv.imread('lena.jpg')  #경로 조심
cv.imshow('input image',img)  #이미지 표시
cv.waitKey(0)   #표시된 시간 0 = 무한
cv.destroyAllWindows()  #c++ 언어여서 사용후 메모리 초기화해야함

2
gray_img = cv.cvtColor(img,cv.COLOR_BGR2GRAY) #그레이스케일 이미지 전환
cv.imshow('gray_img',gray_img) #표시
cv.imwrite('gray_lenna.jpg', gray_img) #gray_img가'gray_lenna.jpg으로 저장
cv.waitKey(0)
cv.destroyAllWindows()

3
resize_img = cv.resize(img,dsize=(200,240))  #크기 변경 
print("변경후",resize_img.shape)                  #크기 출력
while True:                                             #무한 
    if ord('q') == cv.waitKey(0):                     #키보드 입력을 대기하고, 입력된 키가 'q'인 경우 루프를 종료합니다.
        break

4
def face_detect_demo():

    gray = cv.cvtColor(img,cv.COLOR_BGR2GRAY)               #이미지를 BGR에서 그레이스케일로 변환합니다.색상 변환 코드
    face_detector = cv.CascadeClassifier('C:\yamigood\opencv\sources\data\haarcascades\haarcascade_frontalface_default.xml')    #함수를 사용하여 얼굴 감지기를 초기화합니다.
    faces = face_detector.detectMultiScale(gray)                #detectMultiScale() 함수를 사용하여 그레이스케일 이미지에서 얼굴을 감지합니다.
    for x,y,w,h in faces:                                                #faces 배열의 각 얼굴에 대해 반복문을 실행합니다.각 얼굴의 좌표와 크기 정보를 (x, y, w, h) 변수에 할당합니다.
        cv.rectangle(img,(x,y),(x+w, y+h),color=(0,255,0),thickness=2)  사각형 그리고 색 초록색 이고 사각형의 두께를 2로 설정
    cv.imshow('result',img)
face_detect_demo()                       #함수 실행


5
pip install opencv-contrib-python #패키지에는 특징점 검출, 추적, 객체 인식, 구조화된 광학 흐름 등의 기능이 포함되어 있습니다. 
